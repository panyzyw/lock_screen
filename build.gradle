// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'buildshell/depend.gradle'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.android.tools.build:gradle-experimental:0.7.3'

        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        /*
        jcenter 是一个 mavenCentral 的超集，jcenter 还包含了其他 maven 包
        jcenter 具有更好的 cdn，默认支持 https，这个对于谷歌有巨大吸引力
        bintray（jcenter 的服务提供商）表示 jcenter 具有更好的性能
        有数据表明 bintray jcenter 占用更少的本地缓存空间
        更好的交互界面，可以从 jcenter 向 mavenCentral 同步包（下面两个平台的使用教程将会证实这一点）
        笔者亲测，在bintray上发布包到jcenter，在易用性上，的确比，在sonatype发布到到mavenCentral好得多。
         */
        jcenter()
        jcenter { url "http://jcenter.bintray.com" }

        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/'}
        // 可以把 GitHub 项目发布成 maven 库
        maven { url "https://jitpack.io" }
    }

    tasks.withType(org.gradle.api.tasks.compile.JavaCompile) {
        //options.debug = true
        //options.compilerArgs = ['-Xlint:all']
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


//2.2-----8
//2.3.1---9
//2.3.3---10[2.3.6;2.3.7]
//3.0-----11
//3.1-----12
//3.2-----13
//4.0-----14
//4.0.3---15
//4.1.2---16
//4.2.2---17
//4.3.1---18
//4.4.2---19
//4.4.4---19
//4.4W.2--20
//5.0.1---21
//5.1.1---22
//6.0-----23
//7.0-----24

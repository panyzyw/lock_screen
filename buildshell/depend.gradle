// Define versions in a single place
//2.2-----8
//2.3.1---9
//2.3.3---10[2.3.6;2.3.7]
//3.0-----11
//3.1-----12
//3.2-----13
//4.0-----14
//4.0.3---15
//4.1.2---16
//4.2.2---17
//4.3.1---18
//4.4.2---19
//4.4.4---19
//4.4W.2--20
//5.0.1---21
//5.1.1---22
//6.0-----23
ext {
    applicationId = 'com.zccl.ruiqianqi'
    testApplicationId = 'com.zccl.ruiqianqi.test'
    testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"

    // Sdk and tools
    // 32位的最低搜索库是这个参数定义的
    // 64位的最低搜索库就android-21
    minSdkVersion = 16
    // 编译版本要>=目标版本
    buildToolsVersion = '25.0.2'

    // 编译版本
    compileSdkVersion = 25
    // 目标版本
    targetSdkVersion = 22
    supportVersion = '25.2.0'
    appcompatVersion = '25.2.0'
    preferenceVersion = '25.2.0'
    preference14Version = '25.2.0'
    annotationsVersion = '25.2.0'
    designVersion = '25.2.0'

//    // 编译版本
//    compileSdkVersion = 25
//    // 目标版本
//    targetSdkVersion = 22
//    supportVersion = '25.0.1'
//    appcompatVersion = '25.0.1'
//    preferenceVersion = '25.0.1'
//    preference14Version = '25.0.1'
//    annotationsVersion = '25.0.1'
//    designVersion = '25.0.1'

//    // 编译版本
//    compileSdkVersion = 24
//    // 目标版本
//    targetSdkVersion = 22
//    supportVersion = '24.2.1'
//    appcompatVersion = '24.2.1'
//    preferenceVersion = '24.2.1'
//    annotationsVersion = '24.2.1'
//    designVersion = '24.2.1'

//    // 编译版本
//    compileSdkVersion = 23
//    // 目标版本
//    targetSdkVersion = 22
//    supportVersion = '23.2.1'
//    appcompatVersion = '23.2.1'
//    preferenceVersion = '23.2.1'
//    annotationsVersion = '23.2.1'
//    designVersion = '23.2.1'

//    // 编译版本
//    compileSdkVersion = 22
//    // 目标版本
//    targetSdkVersion = 22
//    supportVersion = '22.2.1'
//    appcompatVersion = '22.2.1'
//    preferenceVersion = '22.2.1'
//    annotationsVersion = '22.2.1'
//    designVersion = '22.2.1'

    versionCode = 1
    versionName = "1.0.0"

    // Testing
    jUnitVersion = '4.12'
    mockitoVersion = '2.1.0-beta.124'
    assertJVersion = '3.5.2'
    robolectricVersion = '3.1.2'
    dexmakerVersion = '1.2'
    espressoVersion = '2.2.2'
    testingSupportLibVersion = '0.1'

    // public
    multidexVersion = '1.0.1'
    rxjavaVersion = '1.1.8'
    rxandroidVersion = '1.2.1'
    commons_ioVersion = '2.5'
    commons_langVersion = '3.4'
    eventbusVersion = '3.0.0'
    eventbusProcessorVersion = '3.0.1'
    netty4Version = '4.1.6.Final'
    //nettyVersion = '5.0.0.Alpha2'

    // tools
    glideVersion = '3.7.0'
    gsonVersion = '2.7'
    fastjsonVersion = '1.1.55.android'
    loggerVersion = '1.15'

    // data
    okhttpVersion = '3.6.0'
    okhttpLoggingVersion = '3.6.0'
    retrofitVersion = '2.1.0'
    retrofitScalarsVersion = '2.1.0'
    retrofitGsonVersion = '2.1.0'
    retrofitRxjavaVersion = '2.1.0'
    retrofitProtobufVersion = '2.1.0'
    dbflowVersion = '3.1.1'
    dbflowCoreVersion = '3.1.1'
    dbflowProcessorVersion = '3.1.1'

    // domain


    // presentation
    butterknifeVersion = '8.5.1'
    rxbindingVersion = '0.4.0'
    rxlifecycleVersion = '0.6.1'
    fragmentargsVersion = "3.0.2"

    // Development
    leakcanaryVersion = '1.3.1'
    leakcanaryNoopVersion = '1.3.1'
    crashreportVersion = "latest.release"

    toolsTest = [
            junit:              "junit:junit:${jUnitVersion}",
            mockito:            "org.mockito:mockito-core:${mockitoVersion}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}",
    ]

    dataTest = [
            junit:              "junit:junit:${jUnitVersion}",
            mockito:            "org.mockito:mockito-core:${mockitoVersion}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}",
    ]

    domainTest = [
            junit:              "junit:junit:${jUnitVersion}",
            mockito:            "org.mockito:mockito-core:${mockitoVersion}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}",
    ]

    presentationTest = [
            junit:              "junit:junit:${jUnitVersion}",
            mockito:            "org.mockito:mockito-core:${mockitoVersion}",
            dexmaker:           "com.google.dexmaker:dexmaker:${dexmakerVersion}",
            dexmakerMockito:   "com.google.dexmaker:dexmaker-mockito:${dexmakerVersion}",
            espresso:           "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            testingSupportLib: "com.android.support.test:testing-support-lib:${testingSupportLibVersion}",
    ]

    ////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////

    publicDepend = [
            support:            "com.android.support:support-v4:${supportVersion}",
            appcompat:          "com.android.support:appcompat-v7:${appcompatVersion}",
            design:             "com.android.support:design:${designVersion}",
            multidex:           "com.android.support:multidex:${multidexVersion}",
            preference:         "com.android.support:preference-v7:${preferenceVersion}",
            preference14:       "com.android.support:preference-v14:${preference14Version}",
            annotations:        "com.android.support:support-annotations:${annotationsVersion}",
            rxjava:             "io.reactivex:rxjava:${rxjavaVersion}",
            rxandroid:          "io.reactivex:rxandroid:${rxandroidVersion}",
            commons_io:         "commons-io:commons-io:${commons_ioVersion}",
            commons_lang:       "org.apache.commons:commons-lang3:${commons_langVersion}",
            eventbus:           "org.greenrobot:eventbus:${eventbusVersion}",
            eventbusApt:        "org.greenrobot:eventbus-annotation-processor:${eventbusProcessorVersion}",
            netty4:              "io.netty:netty-all:${netty4Version}",
    ]

    toolsDepend = [
            glide:               "com.github.bumptech.glide:glide:${glideVersion}",
            gson:               "com.google.code.gson:gson:${gsonVersion}",
            fastjson:           "com.alibaba:fastjson:${fastjsonVersion}",
            logger:             "com.orhanobut:logger:${loggerVersion}",
    ]

    dataDepend = [
            okhttp:             "com.squareup.okhttp3:okhttp:${okhttpVersion}",
            okhttpLogging:      "com.squareup.okhttp3:logging-interceptor:${okhttpLoggingVersion}",
            retrofit:           "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitScalars:    "com.squareup.retrofit2:converter-scalars:${retrofitScalarsVersion}",
            retrofitGson:       "com.squareup.retrofit2:converter-gson:${retrofitGsonVersion}",
            retrofitRxjava:     "com.squareup.retrofit2:adapter-rxjava:${retrofitRxjavaVersion}",
            retrofitProtobuf:   "com.squareup.retrofit2:converter-protobuf:${retrofitProtobufVersion}",
    ]

    //domainDepend = [
    //
    //]

    presentationDepend = [
            butterknife:        "com.jakewharton:butterknife:${butterknifeVersion}",
            butterknifeApt:     "com.jakewharton:butterknife-compiler:${butterknifeVersion}",
            dbflow:              "com.github.Raizlabs.DBFlow:dbflow:${dbflowVersion}",
            dbflowCore:          "com.github.Raizlabs.DBFlow:dbflow-core:${dbflowCoreVersion}",
            dbflowApt:           "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflowProcessorVersion}",
            rxbinding:          "com.jakewharton.rxbinding:rxbinding:${rxbindingVersion}",
            rxbindingDesign:    "com.jakewharton.rxbinding:rxbinding-design:${rxbindingVersion}",
            rxbindingAppcompat: "com.jakewharton.rxbinding:rxbinding-appcompat-v7:${rxbindingVersion}",
            rxlifecycle:         "com.trello:rxlifecycle:${rxlifecycleVersion}",
            rxlifecycleComps:   "com.trello:rxlifecycle-components:${rxlifecycleVersion}",
            fragmentargs:       "com.hannesdorfmann.fragmentargs:annotation:${fragmentargsVersion}",
            fragmentargsApt:    "com.hannesdorfmann.fragmentargs:processor:${fragmentargsVersion}"
    ]

    developmentDepend = [
            leakcanary: "com.squareup.leakcanary:leakcanary-android:${leakcanaryVersion}",
            leakcanaryNoop: "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanaryVersion}",
            crashreport: "com.tencent.bugly:crashreport_upgrade:${crashreportVersion}",
            nativecrashreport: "com.tencent.bugly:nativecrashreport:${crashreportVersion}"
    ]

}